#!/usr/bin/env python3

from argparse import ArgumentParser, Action, RawTextHelpFormatter
import os
import sys

from filereader import get_communities_data
import bgp_formatter
import dns_formatter
import smokeping_formatter

formatters = {
    "bird": bgp_formatter.BirdFormatter,
    "bird-roa": bgp_formatter.BirdRoaFormatter,
    "quagga": bgp_formatter.QuaggaFormatter,
    "dnsmasq": dns_formatter.DnsmasqFormatter,
    "bind": dns_formatter.BindFormatter,
    "bind-forward": dns_formatter.BindForwardFormatter,
    "unbound": dns_formatter.UnboundForwardFormatter,
    "smokeping": smokeping_formatter.SmokePingFormatter,
}


def create_config(arguments):

    srcdir = arguments.src
    exclude = frozenset(arguments.exclude)

    if not os.path.isdir(srcdir):
        print("Error: Source directory does not exist or is not a directory",
              file=sys.stderr)
        sys.exit(1)

    if arguments.fmt not in formatters:
        print("Error: No formatter selected", file=sys.stderr)
        sys.exit(2)

    communities = get_communities_data(srcdir, exclude)

    formatter = formatters[arguments.fmt]()
    formatter.generate_config(arguments, communities)

    print(formatter.get_config())


if __name__ == "__main__":

    parser = ArgumentParser()
    parser.add_argument("-s", "--sourcedir", dest="src",
                        help="""Use files in DIR as input files.
                                Default: ../icvpn-meta/""", metavar="DIR",
                        default="../icvpn-meta/")
    parser.add_argument("-x", "--exclude", dest="exclude", action="append",
                        help="Exclude the comma-separated list of COMMUNITIES",
                        metavar="COMMUNITIES",
                        default=[])
    subparsers = parser.add_subparsers(title="format",
                                       dest="fmt",
                                       description="Create config in format.",
                                       metavar=", ".join(formatters.keys()))

    for name, formatter in formatters.items():
        sub_parser = subparsers.add_parser(name=name)
        # We have to create to whole argument set here, because
        # the action argument of add_subparsers works not as
        # expected. Using it changes major behaviour. To be fixed
        # later.
        formatter().populate_argument_parser(sub_parser)

    arguments = parser.parse_args()

    create_config(arguments)
